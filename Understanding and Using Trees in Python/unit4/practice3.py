'''

Bravo, space traveler! Let's delve a bit deeper into heaps by refining the previous solution. You've been assigned to manage the spaceship queue, a MinHeap, by consistently adding and removing spacecrafts according to radar data.

However, to make things more interesting, you're tasked with writing insert and delete functions for the heap to manage the arrivals and departures of ships, respectively. Insert a few new ships with their provided license numbers into an empty MinHeap. Additionally, handle the scenario where the first ship encounters issues and needs to be removed from the queue.

'''

import heapq

# Create an empty MinHeap
minHeap = []

def insert(random_numbers) :
# {
    for number in random_numbers :
    # {
        # TODO: insert number to minHeap
        heapq.heappush(minHeap, number)
    # }

    print("Min Heap after inserting random numbers:", minHeap)

# }

def delete() :

    # TODO: Delete the smallest node from the minHeap
    if (len(minHeap) == 0) :
    # {
        return None
    # }

    else :
    # {
        return heapq.heappop(minHeap)
    # }

# Random numbers generated by a hypothetic radar for a real-world simulation
randomNumbers = [23, 42, 14, 30, 27, 56, 14, 9, 5, 21, 34]

# Inserting the generated random numbers into the MinHeap
insert(randomNumbers)

# Removing the smallest numbers from the MinHeap for a real-world simulation
for i in range(15) :
# {
    minNumber = delete()

    if (minNumber is None) :
    # {
        print("Min Heap is empty. No numbers to delete.")
    # }

    else :
    # {
        print("Min Heap after removing the smallest number", minNumber, ':', minHeap)
    # }

# }

'''

***** BONEYARD *****

'''